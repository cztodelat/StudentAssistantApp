// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAssistantApp.Models;

namespace StudentAssistantApp.Migrations
{
    [DbContext(typeof(StudentAppContext))]
    partial class StudentAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("StudentAssistantApp.Models.DBMark", b =>
                {
                    b.Property<int>("DBMarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DBSubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("DBMarkId");

                    b.HasIndex("DBSubjectId");

                    b.ToTable("DBMarks");
                });

            modelBuilder.Entity("StudentAssistantApp.Models.DBNote", b =>
                {
                    b.Property<int>("DBNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NoteHeadline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DBNoteId");

                    b.ToTable("DBNotes");
                });

            modelBuilder.Entity("StudentAssistantApp.Models.DBTask", b =>
                {
                    b.Property<int>("DBTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskHeadline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DBTaskId");

                    b.ToTable("DBTasks");
                });

            modelBuilder.Entity("StudentAssistantApp.Models.DBUser", b =>
                {
                    b.Property<int>("DBUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("LastTimeLogged")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DBUserId");

                    b.ToTable("DBUsers");
                });

            modelBuilder.Entity("StudentAssistantApp.ModelsDB.DBEvent", b =>
                {
                    b.Property<int>("DBEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DBEventId");

                    b.ToTable("DBEvents");
                });

            modelBuilder.Entity("StudentAssistantApp.ModelsDB.DBSubject", b =>
                {
                    b.Property<int>("DBSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DBSubjectId");

                    b.ToTable("DBSubjects");
                });

            modelBuilder.Entity("StudentAssistantApp.Models.DBMark", b =>
                {
                    b.HasOne("StudentAssistantApp.ModelsDB.DBSubject", "DBSubject")
                        .WithMany("Marks")
                        .HasForeignKey("DBSubjectId");

                    b.Navigation("DBSubject");
                });

            modelBuilder.Entity("StudentAssistantApp.ModelsDB.DBSubject", b =>
                {
                    b.Navigation("Marks");
                });
#pragma warning restore 612, 618
        }
    }
}
